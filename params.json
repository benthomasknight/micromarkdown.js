{
  "name": "Micromarkdown.js",
  "tagline": "convert markdown to html in under 5kb",
  "body": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>micromarkdown.js tests</title>\r\n  <script type=\"text/javascript\" src=\"./micromarkdown.js\"></script>\r\n  <script>\r\n    if (!String.prototype.trim) {\r\n      String.prototype.trim = function () {\r\n        return this.replace(/^\\s+|\\s+$/g, '');\r\n      };\r\n    }\r\n    function parseMD() {\r\n      var tests, i, input, returnstr = '<ol>';\r\n      tests = document.getElementsByTagName('code');\r\n      for (i = 0; i < tests.length; i++) {\r\n        input = tests[i].innerHTML.split('<!--')[1].split('-->')[0].split('|||');\r\n        if (tests[i].id.indexOf('gfm') !== -1) {\r\n          if (micromarkdown.parse(input[0].replace(/^\\s+|\\s+$/g, ''), false).toString().trim() === input[1].toString().trim()) {\r\n            returnstr += '<li style=\"color: green;\">' + tests[i].id + '</li>';\r\n          } else {\r\n            returnstr += '<li style=\"color: red;\">' + tests[i].id + '</li>';\r\n            console.log({\"is\": [micromarkdown.parse(input[0].replace(/^\\s+|\\s+$/g, ''), false).toString().trim()], \"should\": [input[1].toString().trim()]});\r\n          }\r\n        } else {\r\n          if (micromarkdown.parse(input[0].replace(/^\\s+|\\s+$/g, ''), true).toString().trim() === input[1].toString().trim()) {\r\n            returnstr += '<li style=\"color: green;\">' + tests[i].id + '</li>';\r\n          } else {\r\n            returnstr += '<li style=\"color: red;\">' + tests[i].id + '</li>';\r\n            console.log({\"is\": [micromarkdown.parse(input[0].replace(/^\\s+|\\s+$/g, ''), true).toString().trim()], \"should\": [input[1].toString().trim()]});\r\n          }\r\n        }\r\n      }\r\n      returnstr += '</ol>';\r\n      document.getElementById('result').innerHTML = returnstr;\r\n    }\r\n    window.onload = function() {\r\n      parseMD();\r\n    }\r\n  </script>\r\n</head>\r\n<body>\r\n<div style=\"display:none;\">\r\n<code id=\"test_header1\">\r\n<!--\r\n#Header1\r\n|||\r\n<h1>Header1</h1>\r\n-->\r\n</code>\r\n<code id=\"test_header2\">\r\n<!--\r\n##Header2\r\n|||\r\n<h2>Header2</h2>\r\n-->\r\n</code>\r\n<code id=\"test_header3\">\r\n<!--\r\n###Header3\r\n|||\r\n<h3>Header3</h3>\r\n-->\r\n</code>\r\n<code id=\"test_link1\">\r\n<!--\r\n[SimonWaldherr](http://simon.waldherr.eu/)\r\n|||\r\n<a href=\"http://simon.waldherr.eu/\">SimonWaldherr</a>\r\n-->\r\n</code>\r\n<code id=\"test_link2\">\r\n<!--\r\n[SimonWaldherr][1]\r\n[1]: http://simon.waldherr.eu/\r\n|||\r\n<a href=\"http://simon.waldherr.eu/\">SimonWaldherr</a>\r\n-->\r\n</code>\r\n<code id=\"test_bold\">\r\n<!--\r\n**bold** text\r\n|||\r\n<b>bold</b> text\r\n-->\r\n</code>\r\n<code id=\"test_italic\">\r\n<!--\r\n*italic* test\r\n|||\r\n<i>italic</i> test\r\n-->\r\n</code>\r\n<code id=\"test_bolditalic\">\r\n<!--\r\n*italic and **bold** text*\r\n|||\r\n<i>italic and <b>bold</b> text</i>\r\n-->\r\n</code>\r\n<code id=\"test_olist\">\r\n<!--\r\n1. this\r\n2. is a\r\n3. list\r\n|||\r\n<ol><li>this</li>\r\n<li>is a</li>\r\n<li>list</li>\r\n</ol>\r\n-->\r\n</code>\r\n<code id=\"test_ulist\">\r\n<!--\r\n* this\r\n* is a\r\n* list\r\n|||\r\n<ul><li>this</li>\r\n<li>is a</li>\r\n<li>list</li>\r\n</ul>\r\n-->\r\n</code>\r\n<code id=\"test_nestedlist\">\r\n<!--\r\n* this\r\n* is a\r\n  1. test\r\n  1. and\r\n  1. demo\r\n* list\r\n|||\r\n<ul><li>this</li>\r\n<li>is a</li>\r\n<ol><li>test</li>\r\n<li>and</li>\r\n<li>demo</li>\r\n</ol><li>list</li>\r\n</ul>\r\n-->\r\n</code>\r\n<code id=\"test_table\">\r\n<!--\r\nthis | is a   | table  \r\n-----|--------|--------\r\nwith | sample | content\r\nlorem| ipsum  | dolor  \r\nsit  | amet   | sed    \r\ndo   | eiusom | tempor \r\n|||\r\n<table><tr><th>this</th><th>is a</th><th>table</th></tr><tr><td>with</td><td>sample</td><td>content</td></tr>\r\n<tr><td>lorem</td><td>ipsum</td><td>dolor</td></tr>\r\n<tr><td>sit</td><td>amet</td><td>sed</td></tr>\r\n<tr><td>do</td><td>eiusom</td><td>tempor</td></tr>\r\n</table>\r\n-->\r\n</code>\r\n<code id=\"test_gfmtable\">\r\n<!--\r\nthis  | is a     | test    | table \r\n-----:|:--------:|:--------|-------\r\nwith  |   sample | content | lorem\r\nlorem |   ipsum  | dolor   | ipsum\r\nsit   |   amet   | sed     | dolor\r\ndo    |   eiusom | tempor  | sit a\r\n|||\r\n<table><tr><th align=\"right\">this</th><th align=\"center\">is a</th><th align=\"left\">test</th><th>table</th></tr><tr><td align=\"right\">with</td><td align=\"center\">sample</td><td align=\"left\">content</td><td>lorem</td></tr>\r\n<tr><td align=\"right\">lorem</td><td align=\"center\">ipsum</td><td align=\"left\">dolor</td><td>ipsum</td></tr>\r\n<tr><td align=\"right\">sit</td><td align=\"center\">amet</td><td align=\"left\">sed</td><td>dolor</td></tr>\r\n<tr><td align=\"right\">do</td><td align=\"center\">eiusom</td><td align=\"left\">tempor</td><td>sit a</td></tr>\r\n</table>\r\n-->\r\n</code>\r\n<code id=\"test_code\">\r\n<!--\r\n```\r\nvar md   = document.getElementById(\"md\").value,\r\n    html = micromarkdown.parse(md);\r\n```\r\n|||\r\n<code>\r\nvar&nbsp;md&nbsp;&nbsp;&nbsp;=&nbsp;document.getElementById(\"md\").value,<br/>&nbsp;&nbsp;&nbsp;&nbsp;html&nbsp;=&nbsp;micromarkdown.parse(md);<br/></code>\r\n-->\r\n</code>\r\n</div>\r\n<div class=\"result\" id=\"result\">\r\n  \r\n</div>\r\n<script type=\"text/javascript\">\r\n  var _gaq = _gaq || [];\r\n  _gaq.push(['_setAccount', 'UA-33526676-1']);\r\n  _gaq.push(['_trackPageview']);\r\n  (function() {\r\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\r\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\r\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n</script>\r\n</body>\r\n</html>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}